[{"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\index.js":"1","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\App.js":"2","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Context\\NotesContext.js":"3","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Context\\CurrentNote.js":"4","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\NoteInfo.jsx":"5","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\NotesList.jsx":"6","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\AddNote.jsx":"7","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\Note.jsx":"8"},{"size":220,"mtime":1607154005871,"results":"9","hashOfConfig":"10"},{"size":1037,"mtime":1607154939498,"results":"11","hashOfConfig":"10"},{"size":82,"mtime":1607154251923,"results":"12","hashOfConfig":"10"},{"size":81,"mtime":1607154248638,"results":"13","hashOfConfig":"10"},{"size":1481,"mtime":1607154169860,"results":"14","hashOfConfig":"10"},{"size":815,"mtime":1607154173213,"results":"15","hashOfConfig":"10"},{"size":1939,"mtime":1607154163723,"results":"16","hashOfConfig":"10"},{"size":850,"mtime":1607154166995,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"pkneyo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\index.js",[],["38","39"],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\App.js",[],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Context\\NotesContext.js",[],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Context\\CurrentNote.js",[],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\NoteInfo.jsx",["40"],"import React,{useContext,useEffect,useRef} from 'react'\r\nimport {NotesContext} from '../Context/NotesContext'\r\nimport {CurrentNote} from '../Context/CurrentNote'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst LOCAL_STORAGE_KEY = 'myAppData'\r\n\r\nexport default function NoteInfo() {\r\n    const [notes,setNotes] = useContext(NotesContext)\r\n    const [currentNote,setCurrentNote] = useContext(CurrentNote)\r\n    const updateRef = useRef()\r\n    const {noteName} = useParams()\r\n\r\n\r\n    useEffect(() => {\r\n        const storage = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n        if(storage) setNotes(storage)\r\n        const note = storage.find(note => note.name === noteName)\r\n        setCurrentNote(note)\r\n    },[])\r\n\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(notes))\r\n    },[notes])\r\n\r\n\r\n\r\n    function updateNote(id){\r\n        const newNotes = [...notes]\r\n        const selectNote = newNotes.find(note => note.id === id)\r\n        selectNote.text = updateRef.current.value;\r\n        setNotes(newNotes)\r\n    }\r\n    \r\n    function handleUpdate(){\r\n        updateNote(currentNote.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"note-info\">\r\n            <div className=\"noteInfoTitle\">\r\n            <h1>{currentNote.name}</h1>\r\n            </div>\r\n            <textarea ref={updateRef} name=\"content\" id=\"updateContent\" spellCheck=\"false\" value={currentNote.text} onChange={handleUpdate} />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\NotesList.jsx",["41","42"],"import React,{useState, useEffect, useContext} from 'react'\r\nimport Note from './Note'\r\nimport AddNote from './AddNote'\r\nimport { NotesContext } from '../Context/NotesContext'\r\n\r\nconst LOCAL_STORAGE_KEY = 'myAppData'\r\n\r\n\r\nexport default function NotesList() {\r\n    const [notes,setNotes] = useContext(NotesContext);\r\n    \r\n\r\n\r\nuseEffect(() => {\r\n    const storage = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n    if(storage) setNotes(storage)\r\n},[])\r\n\r\nuseEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(notes))\r\n},[notes])\r\n\r\n\r\n    return (\r\n        <>\r\n            <AddNote />\r\n            <div className=\"notesList\">\r\n                {notes.map(note => (\r\n                    <Note key={note.id} note={note}/>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\AddNote.jsx",[],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\Note.jsx",[],["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":20,"column":7,"nodeType":"51","endLine":20,"endColumn":9,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":15,"nodeType":"55","messageId":"56","endLine":1,"endColumn":23},{"ruleId":"49","severity":1,"message":"57","line":17,"column":3,"nodeType":"51","endLine":17,"endColumn":5,"suggestions":"58"},{"ruleId":"45","replacedBy":"59"},{"ruleId":"47","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'noteName', 'setCurrentNote', and 'setNotes'. Either include them or remove the dependency array.","ArrayExpression",["63"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setNotes'. Either include it or remove the dependency array.",["64"],["61"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [noteName, setCurrentNote, setNotes]",{"range":"69","text":"70"},"Update the dependencies array to be: [setNotes]",{"range":"71","text":"72"},[723,725],"[noteName, setCurrentNote, setNotes]",[456,458],"[setNotes]"]