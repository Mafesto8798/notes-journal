[{"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\index.js":"1","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\App.js":"2","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Context\\NotesContext.js":"3","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Context\\CurrentNote.js":"4","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\NoteInfo.jsx":"5","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\NotesList.jsx":"6","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\AddNote.jsx":"7","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\Note.jsx":"8"},{"size":220,"mtime":1607154005871,"results":"9","hashOfConfig":"10"},{"size":904,"mtime":1607155222542,"results":"11","hashOfConfig":"10"},{"size":82,"mtime":1607154251923,"results":"12","hashOfConfig":"10"},{"size":81,"mtime":1607154248638,"results":"13","hashOfConfig":"10"},{"size":2814,"mtime":1623190672724,"results":"14","hashOfConfig":"10"},{"size":815,"mtime":1623190702582,"results":"15","hashOfConfig":"10"},{"size":2164,"mtime":1623201449221,"results":"16","hashOfConfig":"10"},{"size":572,"mtime":1611809143626,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1kcb5pj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\index.js",[],["38","39"],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\App.js",[],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Context\\NotesContext.js",[],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Context\\CurrentNote.js",[],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\NoteInfo.jsx",["40"],"import React,{useContext,useEffect,useRef, useState} from 'react'\r\nimport {NotesContext} from '../Context/NotesContext'\r\nimport {CurrentNote} from '../Context/CurrentNote'\r\nimport {useParams,Link,Redirect} from 'react-router-dom'\r\nimport ReactModal from 'react-modal';\r\n\r\nconst LOCAL_STORAGE_KEY = 'myAppData'\r\n\r\nexport default function NoteInfo() {\r\n    const [notes,setNotes] = useContext(NotesContext)\r\n    const [currentNote,setCurrentNote] = useContext(CurrentNote)\r\n    const [confirmDelete,setConfirmDelete] = useState(false);\r\n    const updateRef = useRef()\r\n    const [redirect,setRedirect] = useState(false)\r\n    const {noteName} = useParams()\r\n\r\n\r\n    useEffect(() => {\r\n        const storage = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n        if(storage) setNotes(storage)\r\n        const note = storage.find(note => note.name === noteName)\r\n        setCurrentNote(note)\r\n    },[])\r\n\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(notes))\r\n    },[notes])\r\n\r\n\r\n\r\n    function updateNote(id){\r\n        const newNotes = [...notes]\r\n        const selectNote = newNotes.find(note => note.id === id)\r\n        selectNote.text = updateRef.current.value;\r\n        setNotes(newNotes)\r\n    }\r\n\r\n    function deleteNote(id){\r\n        const newNotes = [...notes]\r\n        const modifiedNotes = newNotes.filter(note => note.id !== id)\r\n        setNotes(modifiedNotes)\r\n    }\r\n    \r\n    function handleUpdate(){\r\n        updateNote(currentNote.id)\r\n    }\r\n\r\n    function handleDelete(){\r\n        deleteNote(currentNote.id)\r\n        setRedirect(true)\r\n    }\r\n\r\n    function redirectDelete(){\r\n        if(redirect){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"deleteBtn\" onClick={() => setConfirmDelete(true)}>Delete Note</div>\r\n        {redirectDelete()}\r\n        <ReactModal\r\n        isOpen={confirmDelete}\r\n        className=\"modal\"\r\n        ariaHideApp={false}\r\n        >\r\n                <div className=\"confirm-delete\">\r\n                    <h1>Are you sure you want to delete this note?</h1>\r\n                    <div className=\"choices\">\r\n                        <div className=\"confirmBtn\" onClick={handleDelete}>Yes</div>\r\n                        <div className=\"rejectBtn\" onClick={() => setConfirmDelete(false)}>No</div>\r\n                    </div>\r\n                </div>\r\n        </ReactModal>  \r\n        <div className=\"note-info\">\r\n            <div className=\"noteInfoTitle\">\r\n            <Link to=\"/\" className=\"backBtn\">Back</Link>\r\n            <h1>{currentNote.name}</h1>\r\n            </div>\r\n            <textarea ref={updateRef} name=\"content\" id=\"updateContent\" spellCheck=\"false\" value={currentNote.text} onChange={handleUpdate} />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\NotesList.jsx",["41","42"],"import React,{useState, useEffect, useContext} from 'react'\r\nimport Note from './Note'\r\nimport AddNote from './AddNote'\r\nimport { NotesContext } from '../Context/NotesContext'\r\n\r\nconst LOCAL_STORAGE_KEY = 'myAppData'\r\n\r\n\r\nexport default function NotesList() {\r\n    const [notes,setNotes] = useContext(NotesContext);\r\n    \r\n\r\n\r\nuseEffect(() => {\r\n    const storage = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n    if(storage) setNotes(storage)\r\n},[])\r\n\r\nuseEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(notes))\r\n},[notes])\r\n\r\n\r\n    return (\r\n        <>\r\n            <AddNote />\r\n            <div className=\"notesList\">\r\n                {notes.map(note => (\r\n                    <Note key={note.id} note={note}/>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\AddNote.jsx",["43"],"C:\\Users\\Kenny\\Documents\\Coding\\notes-journal\\src\\Components\\Note.jsx",["44","45"],"import React,{useContext} from 'react'\r\nimport {NotesContext} from '../Context/NotesContext'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Note({note}) {\r\n    const [notes,setNotes] = useContext(NotesContext)\r\n\r\n    return (\r\n        <>\r\n        <div className=\"note\">\r\n        <Link className=\"note-link\" to={`/${note.name}`}> \r\n        <div className=\"note-card\">\r\n            <p className=\"preview-text\">{note.text}</p>\r\n        </div>\r\n        <h1 className=\"title\">{note.name}</h1>\r\n        </Link>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":23,"column":7,"nodeType":"52","endLine":23,"endColumn":9,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":15,"nodeType":"56","messageId":"57","endLine":1,"endColumn":23},{"ruleId":"50","severity":1,"message":"58","line":17,"column":3,"nodeType":"52","endLine":17,"endColumn":5,"suggestions":"59"},{"ruleId":"54","severity":1,"message":"60","line":18,"column":10,"nodeType":"56","messageId":"57","endLine":18,"endColumn":22},{"ruleId":"54","severity":1,"message":"61","line":8,"column":12,"nodeType":"56","messageId":"57","endLine":8,"endColumn":17},{"ruleId":"54","severity":1,"message":"62","line":8,"column":18,"nodeType":"56","messageId":"57","endLine":8,"endColumn":26},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'noteName', 'setCurrentNote', and 'setNotes'. Either include them or remove the dependency array.","ArrayExpression",["65"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setNotes'. Either include it or remove the dependency array.",["66"],"'handleCancel' is defined but never used.","'notes' is assigned a value but never used.","'setNotes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [noteName, setCurrentNote, setNotes]",{"range":"71","text":"72"},"Update the dependencies array to be: [setNotes]",{"range":"73","text":"74"},[901,903],"[noteName, setCurrentNote, setNotes]",[456,458],"[setNotes]"]